{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","prepareTodos","App","useState","setTitle","selectedUserId","setSelectedUserId","setTodos","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","trim","length","test","currentTodos","Math","max","type","value","placeholder","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3edc5e33.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user: { name, email } }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${email}`}\n  >\n    {name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <li\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </li>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </ul>\n);\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { User } from './types/User';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const user = usersFromServer.find(({ id }) => id === userId);\n\n  return user || null;\n}\n\nconst prepareTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState([...prepareTodos]);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const generateNewTodo = () => {\n    setTodos(currentTodos => (\n      [\n        ...currentTodos,\n        {\n          id: Math.max(...currentTodos.map(todo => todo.id)) + 1,\n          title,\n          completed: false,\n          userId: selectedUserId,\n          user: getUser(selectedUserId),\n        },\n      ]\n    ));\n  };\n\n  const formValidation = () => {\n    const regExp = /^[A-Za-zА-Яа-я0-9\\s]+$/;\n\n    if (!title.trim().length || !regExp.test(title)) {\n      setTitleError(true);\n    }\n\n    if (!selectedUserId) {\n      setUserError(true);\n    }\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setSelectedUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    formValidation();\n\n    if (title.trim().length && selectedUserId) {\n      generateNewTodo();\n      resetForm();\n    }\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleSelectUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(Number(event.target.value));\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            name=\"titleInput\"\n            value={title}\n            placeholder=\"Enter a title\"\n            onChange={handleChangeTitle}\n          />\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            name=\"userSelect\"\n            value={selectedUserId}\n            onChange={handleSelectUser}\n          >\n            <option value={0} disabled>Choose a user</option>\n\n            {usersFromServer.map(({ name, id }) => (\n              <option value={id} key={id}>{name}</option>\n            ))}\n          </select>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}